{"backend_state":"init","connection_file":"/projects/7a0d9dc4-a729-4511-b795-d6d235d03b6d/.local/share/jupyter/runtime/kernel-ab9ca9cf-3824-4dc0-af38-a95250bb4411.json","kernel":"nlp_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"0a2a87","input":"","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"34023b","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7fe7bc","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8e0a04","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"996fa8","input":"","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c0375c","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e56a59","input":"","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f16faa","input":"","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fa142e","input":"","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"116be0","input":"import os, random\n\nos.listdir(f'{os.curdir}/py150_files/data')\nos.path.isfile(parameter)\npython_files = []\ndef extract_python_files(filepath):\n    global python_files\n    if os.path.isfile(filepath) and filepath[-2] =='py':\n        python_files.append(filepath)\n    elif os.path.isfile(filepath):\n        return None\n    else: \n        filepath_files = os.listdir(filepath)\n        for filepath_file in filepath_files:\n            extract_python_files(f'{filepath}/{filepath_file}')\nextract_python_file(f'{os.curdir}/py150_files')\nprint(len(python_files))\nfiles_sample = random.sample(python_files)\ncode_dataset = open('our_code_dataset.txt', 'w')\nfor filepath in files_sample:\n    file_code = open(filepath, encoding = 'latin-1').readlines()\n    for line in file_code:\n        code_dataset.write(line)\ncode_dataset.close()\n\n\n\n\n\n\n","output":{"0":{"ename":"NameError","evalue":"name 'parameter' is not defined","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","Input \u001b[0;32mIn [6]\u001b[0m, in \u001b[0;36m<cell line: 4>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mos\u001b[39;00m\u001b[38;5;241m,\u001b[39m \u001b[38;5;21;01mrandom\u001b[39;00m\n\u001b[1;32m      3\u001b[0m os\u001b[38;5;241m.\u001b[39mlistdir(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mos\u001b[38;5;241m.\u001b[39mcurdir\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m/py150_files/data\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m----> 4\u001b[0m os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39misfile(\u001b[43mparameter\u001b[49m)\n\u001b[1;32m      5\u001b[0m python_files \u001b[38;5;241m=\u001b[39m []\n\u001b[1;32m      6\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mextract_python_files\u001b[39m(filepath):\n","\u001b[0;31mNameError\u001b[0m: name 'parameter' is not defined"]}},"pos":0,"type":"cell"}
{"cell_type":"raw","id":"f3c7f2","input":"","pos":2,"type":"cell"}
{"id":0,"time":1655002654302,"type":"user"}
{"last_load":1655002653655,"type":"file"}